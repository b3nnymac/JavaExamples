#BlueJ class context
comment0.params=
comment0.target=GlueWorld\ getInstance()
comment1.params=
comment1.target=GlueWorld()
comment1.text=\n\ Constructor,\ sets\ up\ the\ blank\ world\n
comment10.params=
comment10.target=int\ getNumRows()
comment11.params=row\ col
comment11.target=entities.Entity\ get(int,\ int)
comment11.text=\n\ Returns\ the\ entity\ at\ the\ given\ location\n\ @param\ row\ row\ location\n\ @param\ col\ column\ location\n\ @return\ the\ entity\ found\ at\ the\ location\n\ @throws\ IndexOutOfBoundsException\ if\ the\ row\ or\ col\ are\ out\ of\ bounds\n
comment12.params=
comment12.target=int\ numStickyItemsInWorkd()
comment12.text=\n\ returns\ a\ count\ of\ the\ number\ of\ sticky\ items\ current;y\ placed\ into\ the\ world\n\ @return\n
comment2.params=row\ col
comment2.target=boolean\ inBounds(int,\ int)
comment2.text=\n\ Determines\ if\ the\ given\ row\ and\ col\ value\ are\ within\ bounds\n\ of\ the\ grid\ world\n\ @param\ row\n\ @param\ col\n\ @return\ true\ for\ pass,\ false\ for\ fail\n
comment3.params=thing
comment3.target=boolean\ inBounds(entities.Entity)
comment3.text=\n\ Determines\ if\ the\ given\ Entity\ is\ within\ bounds\n\ @param\ thing\n\ @return\n
comment4.params=row\ col
comment4.target=boolean\ canLocationbeMovedOnto(int,\ int)
comment4.text=\n\ Determines\ in\ the\ given\ location\ is\ within\ bounds\ and\ can\ be\ moved\n\ on\ to.\ There\ could\ be\ an\ entity\ at\ the\ location\ with\ that\ has\ the\ ability\ to\ be\ \n\ Stepped\ onto.\ \n\ @param\ row\ row\ location\ to\ check\n\ @param\ col\ column\ location\ to\ check\n\ @return\ boolean\ if\ it\ is\ open,\ false\ otherwise\n
comment5.params=thing
comment5.target=entities.Entity\ place(entities.Entity)
comment5.text=\n\ Places\ the\ entity\ at\ the\ location\ it\ is\ marked\ to\ appear\ at.\ If\ any\n\ other\ entity\ is\ at\ the\ location\ already\ it\ will\ be\ returned.\ \n\ @param\ thing\ the\ entity\ to\ place\ in\ the\ world\n\ @return\ null\ for\ no\ past\ value\ or\ the\ previous\ entity\ is\ returned\n
comment6.params=row\ col\ thing
comment6.target=entities.Entity\ place(int,\ int,\ entities.Entity)
comment6.text=\n\ Places\ the\ entity\ at\ the\ given\ location.\ If\ any\n\ other\ entity\ is\ at\ the\ location\ already\ it\ will\ be\ returned.\ \n\ @param\ row\n\ @param\ col\n\ @param\ thing\ the\ entity\ to\ place\ in\ the\ world\n\ @return\ null\ for\ no\ past\ value\ or\ the\ previous\ entity\ is\ returned\n
comment7.params=entity
comment7.target=void\ remove(entities.Entity)
comment7.text=\n\ places\ a\ null\ at\ the\ location\ of\ the\ given\ entity\ to\ indicate\ it\ has\ been\ removed\n\ @param\ entity\n
comment8.params=row\ col
comment8.target=void\ clearLocation(int,\ int)
comment8.text=\n\ clears\ out\ any\ entity\ at\ the\ given\ location\ (makes\ it\ an\ open\ location)\n\ @param\ row\ \n\ @param\ col\n
comment9.params=
comment9.target=int\ getNumCols()
numComments=13
