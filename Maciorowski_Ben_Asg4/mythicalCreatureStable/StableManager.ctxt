#BlueJ class context
comment0.params=creatureStable\ creatureStableFile
comment0.target=void\ run(Stable,\ java.lang.String)
comment0.text=\n\ Starts\ the\ program\n\ @param\ creatureStable\ a\ pre-loaded\ stable\ object\n\ @param\ creatureStableFile\ the\ name\ of\ the\ input\ file\n
comment1.params=
comment1.target=void\ setUpMenus()
comment1.text=\n\ Sets\ up\ menus\ that\ have\ constant\ variables\n
comment10.params=
comment10.target=void\ moveCreature()
comment10.text=\n\ A\ menu\ options\ which\ receives\ input\ from\ a\ user\ to\ move\ a\ creature\ within\ the\ stable\n
comment11.params=
comment11.target=void\ addNewStall()
comment11.text=\n\ A\ menu\ options\ which\ receives\ input\ from\ a\ user\ to\ add\ a\ stall\ to\ the\ stable\n
comment12.params=
comment12.target=void\ removeStall()
comment12.text=\n\ A\ menu\ options\ which\ receives\ input\ from\ a\ user\ to\ remove\ a\ stall\ to\ the\ stable\n
comment13.params=
comment13.target=void\ loadMenuWithOpenStalls()
comment13.text=\n\ Populates\ a\ user\ menu\ with\ stalls\ that\ are\ open\n
comment14.params=
comment14.target=void\ loadMenuWithCurrentCreatures()
comment14.text=\n\ Populates\ a\ user\ menu\ with\ all\ current\ creatures\ in\ the\ stall\n
comment15.params=type
comment15.target=java.util.ArrayList\ loadAnArrayWithCompatibleStallTypes(java.lang.String)
comment15.text=\n\ Populates\ an\ array\ list\ with\ possible\ stall\ types\ based\ on\ a\ specific\ creature\ type\n\ @param\ type\ a\ specific\ stall\ type\ \n\ @return\ an\ arraylist\ of\ stall\ types\n
comment16.params=
comment16.target=void\ generateReport()
comment16.text=\n\ a\ menu\ option\ which\ generates\ a\ user\ report\ prefixed\ with\ \u201CREPORT_\u201D\ followed\ by\ the\ original\ file\ name\ \n
comment2.params=
comment2.target=java.lang.String\ listCurrentStableOccupancy()
comment2.text=\n\ Creates\ a\ string\ of\ the\ stable's\ stalls\ and\ occupants\n\ @return\ a\ formatted\ string\ of\ the\ stable's\ contents\n
comment3.params=row\ stall
comment3.target=char\ charcaterCharForPrint(int,\ int)
comment3.text=\n\ Determines\ if\ a\ stall\ contains\ a\ creature\ and\ returns\ the\ char\ of\ their\ type\n\ @param\ row\ a\ specific\ row\n\ @param\ stall\ a\ specific\ stall\n\ @return\ a\ char\ type\ or\ \#\ if\ unoccupied\n
comment4.params=
comment4.target=java.lang.String\ listAllCreatures()
comment4.text=\n\ Creates\ a\ string\ of\ the\ stable's\ occupants\n\ @return\ a\ formatted\ string\ of\ the\ stable's\ occupants\n
comment5.params=
comment5.target=void\ addNewCreature()
comment5.text=\n\ A\ menu\ options\ which\ receives\ input\ from\ a\ user\ to\ add\ a\ creature\ to\ the\ stable\n
comment6.params=possibleStallTypes\ newCreature
comment6.target=boolean\ findStallThatMatchesCriteria(java.util.ArrayList,\ Creature)
comment6.text=\n\ Determines\ if\ at\ least\ one\ stall\ is\ available\ and\ compatible\ based\ on\ an\ array\ of\ stall\ types\n\ @return\ the\ verifiation\ if\ a\ stall\ is\ open\ and\ matches\ criteria\n
comment7.params=
comment7.target=void\ removeCreature()
comment7.text=\n\ A\ menu\ options\ which\ receives\ input\ from\ a\ user\ to\ removes\ a\ creature\ to\ the\ stable\n
comment8.params=
comment8.target=boolean\ checkIfEmpty()
comment8.text=\n\ verifies\ is\ the\ stable\ is\ completely\ empty\n\ @return\ verification\ if\ the\ stable\ is\ empty\n
comment9.params=
comment9.target=boolean\ checkIfFull()
comment9.text=\n\ verifies\ is\ the\ stable\ is\ completely\ full\n\ @return\ verification\ if\ the\ stable\ is\ full\n
numComments=17
